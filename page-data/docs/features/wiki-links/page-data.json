{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/features/wiki-links","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"wiki-links\"\n  }, \"Wiki Links\"), mdx(\"p\", null, \"Wiki links are the internal links that connect the files in your knowledge base.\"), mdx(\"p\", null, \"To create a wiki link use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[\"), \" and type the name of another file in your repo, for example \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/graph-visualization\",\n    \"title\": \"graph-visualization\"\n  }, \"[[graph-visualization]]\"), \"\"), mdx(\"p\", null, \"You can also create a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/placeholder\",\n    \"title\": \"placeholder\"\n  }, \"[[placeholder]]\"), \".\\nA placeholder is a wiki link that doesn't have a target file and a link to a placeholder is styled differently so you can easily tell them apart.\\nThey can still be helpful to highlight connections.\"), mdx(\"p\", null, \"Open the graph with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Foam: Show Graph\"), \" command, and look at the placeholder node.\"), mdx(\"p\", null, \"Remember, with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CTRL/CMD+click\"), \" on a wikilink you can navigate to the note, or create it (if the link is a placeholder).\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"graph-visualization\"\n  }, \"Graph Visualization\"), mdx(\"p\", null, \"Foam comes with a graph visualization of your notes.\\nTo see the graph execute the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Foam: Show Graph\"), \" command.\"), mdx(\"h2\", {\n    \"id\": \"graph-navigation\"\n  }, \"Graph Navigation\"), mdx(\"p\", null, \"With the graph you can:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"highlight a node by hovering on it, to quickly see how it's connected to the rest of your notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"select one or more (by keeping \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shift\"), \" pressed while selecting) nodes by clicking on them, to better understand the structure of your notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"navigate to a note by clicking on it while pressing \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ctrl\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cmd\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"automatically center the graph on the currently edited note, to immediately see it's connections\")), mdx(\"h2\", {\n    \"id\": \"custom-graph-styles\"\n  }, \"Custom Graph Styles\"), mdx(\"p\", null, \"By default the Foam graph will use the VsCode theme, but it's possible to customize it with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"foam.graph.style\"), \" setting.\"), mdx(\"p\", null, \"A sample configuration object is provided below, you can provide as many or as little configuration as you wish:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"\\\"foam.graph.style\\\": {\\n    \\\"background\\\": \\\"#202020\\\",\\n    \\\"fontSize\\\": 12,\\n    \\\"highlightedForeground\\\": \\\"#f9c74f\\\",\\n    \\\"node\\\": {\\n        \\\"note\\\": \\\"#277da1\\\",\\n        \\\"placeholder\\\": \\\"#545454\\\",\\n        \\\"feature\\\": \\\"green\\\",\\n    }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"note\"), \" defines the color for regular nodes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"placeholder\"), \" defines the color for links that don't match any existing note. This is a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/placeholder\",\n    \"title\": \"placeholder\"\n  }, \"[[placeholder]]\"), \" because no file with such name exists (see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/wiki-links\",\n    \"title\": \"wiki-links\"\n  }, \"[[wiki-links]]\"), \" for more info).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"feature\"), \" shows an example of how you can use note types to customize the graph. It defines the color for the notes of type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"feature\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/note-properties\",\n    \"title\": \"note-properties\"\n  }, \"[[note-properties]]\"), \" for details\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can have as many types as you want\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"7cc7578e-33ae-5956-995c-e94ef7a7e42f","fields":{"slug":"/docs/features/graph-visualization","title":"Graph Visualization"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"link-reference-definitions\"\n  }, \"Link Reference Definitions\"), mdx(\"p\", null, \"When you use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[wiki-links]]\"), \", the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/foambubble/foam/tree/master/packages/foam-vscode\"\n  }, \"foam-vscode\"), \" extension can generate \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://spec.commonmark.org/0.29/#link-reference-definitions\"\n  }, \"Markdown Link Reference Definitions\"), \" at the bottom of the file.\"), mdx(\"p\", null, \"This is done to make the content of the file compatible with various Markdown tools (e.g. parsers, static site generators, VS code plugins etc), which don't support \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[wiki-links]]\"), \" directly.\"), mdx(\"p\", null, \"This feature is disabled by default because you don't need it to navigate your workspace, it is useful for publishing and compatibility of your notes.\"), mdx(\"h2\", {\n    \"id\": \"example\"\n  }, \"Example\"), mdx(\"p\", null, \"The following example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-md\"\n  }, \"- [[graph-visualization]]\\n\")), mdx(\"p\", null, \"...generates the following link reference definitions to the bottom of the file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-md\"\n  }, \"[graph-visualization]: graph-visualization \\\"Graph Visualization\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"configuration\"\n  }, \"Configuration\"), mdx(\"p\", null, \"You can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"foam.edit.linkReferenceDefinitions\"), \" to configure the definitions (see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/get-started-with-vscode\",\n    \"title\": \"get-started-with-vscode\"\n  }, \"[[get-started-with-vscode]]\"), \"):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"withoutExtensions\"), \" (default): this works better with certain web publishing tools (e.g. GitHub pages)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"withExtensions\"), \": this works better with standard markdown-based tools (e.g GitHub web UI)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"off\"), \": this disables the generation of definitions\")), mdx(\"p\", null, \"After changing the setting in your workspace, you can run the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Foam: Run Janitor (Experimental)\"), \" command to convert all existing definitions.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"208bdf68-bb7d-5e61-a0ce-85c90f7d2d6b","fields":{"slug":"/docs/features/link-reference-definitions","title":"Link Reference Definitions"}}}]},"fields":{"slug":"/docs/features/wiki-links","title":"Wiki Links"}}},"pageContext":{"id":"70ba0cbe-16d6-5c7d-8e9b-8d0f00df01d3"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}