{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/features/tags-and-tag-explorer","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"my-tag1 my-tag2\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"tags-and-tag-explorer\"\n  }, \"Tags and Tag Explorer\"), mdx(\"h2\", {\n    \"id\": \"tags\"\n  }, \"Tags\"), mdx(\"p\", null, \"You can add tags to your notes to categorize them, or in any way you want.\"), mdx(\"p\", null, \"There are two ways to add tags:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can add #tags just by writing them in the note\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"another way is through \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/note-properties\",\n    \"title\": \"note-properties\"\n  }, \"[[note-properties]]\"), \", as you can see at the top of this file\")), mdx(\"h2\", {\n    \"id\": \"tag-explorer\"\n  }, \"Tag Explorer\"), mdx(\"p\", null, \"In the sidebar to the left, you will see a panel called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tag Explorer\"), \".\"), mdx(\"p\", null, \"You can use this panel to see the tags in your notes, and navigate them.\"), mdx(\"p\", null, \"Notice \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my-tag1\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my-tag2\"), \", which were added via \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/note-properties\",\n    \"title\": \"note-properties\"\n  }, \"[[note-properties]]\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"feature\",\n  \"keywords\": \"hello world\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"note-properties\"\n  }, \"Note Properties\"), mdx(\"p\", null, \"At the top of the file you can have a section where you define your properties.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Be aware that this section needs to be at the very top of the file to be valid\")), mdx(\"p\", null, \"For example, for this file, we have:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"---\\ntype: feature\\nkeywords: hello world\\n---\\n\")), mdx(\"p\", null, \"Those are properties.\\nProperties can be used to organize your notes.\"), mdx(\"h2\", {\n    \"id\": \"special-properties\"\n  }, \"Special Properties\"), mdx(\"p\", null, \"Some properties have special meaning for Foam:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"title\"), \" property will assign the name to the note that you will see in the graph, regardless of the filename or the first heading (also see how to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/write-notes-in-foam\",\n    \"title\": \"write-notes-in-foam\"\n  }, \"[[write-notes-in-foam]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"type\"), \" property can be used to style notes differently in the graph (also see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/graph-visualization\",\n    \"title\": \"graph-visualization\"\n  }, \"[[graph-visualization]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tags\"), \" property can be used to add tags to a note (see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tags-and-tag-explorer\",\n    \"title\": \"tags-and-tag-explorer\"\n  }, \"[[tags-and-tag-explorer]]\"), \")\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"3464c82e-3ad6-5699-b063-d1d62c3f6cfc","fields":{"slug":"/docs/features/note-properties","title":"Note Properties"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"getting-started\"\n  }, \"Getting Started\"), mdx(\"p\", null, \"Welcome to your new foam workspace, let's get you started.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"if you are already familiar with Foam and don't need help, just remove the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docs\"), \" folder for a clean repo.\")), mdx(\"p\", null, \"Let's go through this to set up your repo:\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"if you are new with VsCode, see how to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/get-started-with-vscode\",\n    \"title\": \"get-started-with-vscode\"\n  }, \"[[get-started-with-vscode]]\"), \" and how to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/use-keyboard-shortcuts-for-editing\",\n    \"title\": \"use-keyboard-shortcuts-for-editing\"\n  }, \"[[use-keyboard-shortcuts-for-editing]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"you can navigate the links between your notes by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cmd+click\"), \" (or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ctrl+click\"), \" on Windows) on a wiki link. You can go back with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ctrl+-\"), \". Here, go to your \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/inbox\",\n    \"title\": \"inbox\"\n  }, \"[[inbox]]\"), \"\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"to see how your notes are connected, execute the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Foam: Show Graph\"), \" command. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/graph-visualization\",\n    \"title\": \"graph-visualization\"\n  }, \"[[graph-visualization]]\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"#tags can be used to further organize your content. Look at the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tag Explorer\"), \" view on the left panel to find and navigate the tags in your knowledge base. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/tags-and-tag-explorer\",\n    \"title\": \"tags-and-tag-explorer\"\n  }, \"[[tags-and-tag-explorer]]\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Foam supports \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/spell-checking\",\n    \"title\": \"spell-checking\"\n  }, \"[[spell-checking]]\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"You can also paste images in your Foam, just press \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cmd+alt+v\"), \" to create the image file and link to it from your note. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/paste-images-from-clipboard\",\n    \"title\": \"paste-images-from-clipboard\"\n  }, \"[[paste-images-from-clipboard]]\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"You can use Foam for your daily notes, or journaling. Execute now the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Foam: Open Daily Note\"), \" command to create a new file in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"journal\"), \" folder. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/daily-notes\",\n    \"title\": \"daily-notes\"\n  }, \"[[daily-notes]]\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Want to see how to manage your tasks? Go to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/todo\",\n    \"title\": \"todo\"\n  }, \"[[todo]]\"), \" note\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"The section at the end of this file contains wikilink definitions, which enable navigation of your notes from GitHub's web UI, and in general to make \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[wikilinks]]\"), \" understood by any markdown parser. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/link-reference-definitions\",\n    \"title\": \"link-reference-definitions\"\n  }, \"[[link-reference-definitions]]\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"To explore all the Foam settings, press \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cmd+,\"), \", then \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Extensions > Foam\"))), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Living within VsCode, Foam can be customized in many ways! Look at the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://foambubble.github.io/foam/recipes/recipes\"\n  }, \"Foam Recipes\"), \" for ideas!\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Join the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://foambubble.github.io/join-discord/e\"\n  }, \"Foam community on Discord\"), \", introduce yourself and leave a message on how you found Foam and how the onboarding went :) We are always keen to do better\")), mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", {\n    parentName: \"p\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"Take the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://foambubble.github.io/welcome-survey/e\"\n  }, \"Foam Welcome survey\"), \"! It helps us better understand your need and how we can make Foam better and better for you :)\"))), mdx(\"h2\", {\n    \"id\": \"advanced-features\"\n  }, \"Advanced Features\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    \"className\": \"task-list-item\"\n  }, mdx(\"input\", {\n    parentName: \"li\",\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  }), \" \", \"You can create \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/note-templates\",\n    \"title\": \"note-templates\"\n  }, \"[[note-templates]]\"), \" for things like book reviews, people, daily notes (coming soon), and more!\")), mdx(\"h2\", {\n    \"id\": \"about-foam\"\n  }, \"About Foam\"), mdx(\"p\", null, \"Foam doesn't do all this magic on its own, it relies on some amazing extensions. Look at their documentation if you want to fully unlock the possibilities!\"), mdx(\"p\", null, \"Here they are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one\"\n  }, \"Markdown All In One\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=kortina.vscode-markdown-notes\"\n  }, \"Markdown Notes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mushanshitiancai/vscode-paste-image\"\n  }, \"vscode-paste-image\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=ban.spellright\"\n  }, \"spellright\"))), mdx(\"p\", null, \"A special mention goes to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=tchayen.markdown-links\"\n  }, \"Markdown Links\"), \", which has now been replaced by our graph but was foundational to Foam's beginnings.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"88d8aedc-8a69-5167-bc2b-ba535a546ac4","fields":{"slug":"/getting-started","title":"Getting Started"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"type\": \"feature\",\n  \"keywords\": \"hello world\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"note-properties\"\n  }, \"Note Properties\"), mdx(\"p\", null, \"At the top of the file you can have a section where you define your properties.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Be aware that this section needs to be at the very top of the file to be valid\")), mdx(\"p\", null, \"For example, for this file, we have:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"---\\ntype: feature\\nkeywords: hello world\\n---\\n\")), mdx(\"p\", null, \"Those are properties.\\nProperties can be used to organize your notes.\"), mdx(\"h2\", {\n    \"id\": \"special-properties\"\n  }, \"Special Properties\"), mdx(\"p\", null, \"Some properties have special meaning for Foam:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"title\"), \" property will assign the name to the note that you will see in the graph, regardless of the filename or the first heading (also see how to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/write-notes-in-foam\",\n    \"title\": \"write-notes-in-foam\"\n  }, \"[[write-notes-in-foam]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"type\"), \" property can be used to style notes differently in the graph (also see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/graph-visualization\",\n    \"title\": \"graph-visualization\"\n  }, \"[[graph-visualization]]\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tags\"), \" property can be used to add tags to a note (see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tags-and-tag-explorer\",\n    \"title\": \"tags-and-tag-explorer\"\n  }, \"[[tags-and-tag-explorer]]\"), \")\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"3464c82e-3ad6-5699-b063-d1d62c3f6cfc","fields":{"slug":"/docs/features/note-properties","title":"Note Properties"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"getting-started-with-vscode\"\n  }, \"Getting started with VsCode\"), mdx(\"p\", null, \"VsCode is a powerful text editor, hidden behind a simple interface.\"), mdx(\"h2\", {\n    \"id\": \"keyboard-shortcuts\"\n  }, \"Keyboard shortcuts\"), mdx(\"p\", null, \"VsCode supports various \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"keyboard shortcuts\"), \", the most important for us are:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Shortcut\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Action\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"cmd+N\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"create a new file\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"cmd+S\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"save the current file\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"cmd+O\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"open a file\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"cmd+P\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"use quickpick to open a file\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"cmd+shift+P\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"invoke a command (see below)\")))), mdx(\"p\", null, \"For more information, see the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://code.visualstudio.com/docs/getstarted/keybindings#_keyboard-shortcuts-reference\"\n  }, \"vscode keyboard cheat sheets\"), \", where you can also see how to customize your keybindings.\"), mdx(\"h2\", {\n    \"id\": \"commands\"\n  }, \"Commands\"), mdx(\"p\", null, \"Commands make VsCode extremely powerful.\"), mdx(\"p\", null, \"To invoke a command, press \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cmd+shift+P\"), \" and select the command you want to execute.\\nFor example, to see the Foam graph:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"press \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cmd+shift+P\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"start typing \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"show graph\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"select the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Foam: Show Graph\"), \" command\")), mdx(\"p\", null, \"And watch the magic unfold.\"), mdx(\"p\", null, \"For more information on commands, see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette\"\n  }, \"commands on the VsCode site\"), \".\"), mdx(\"p\", null, \"If you want to learn more about VsCode, check out their \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://code.visualstudio.com/docs#first-steps\"\n  }, \"website\"), \".\"), mdx(\"h2\", {\n    \"id\": \"panels\"\n  }, \"Panels\"), mdx(\"p\", null, \"You can see a few panels on the left, including:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Outline\"), \": this panel shows you the structure of the file based on the headings\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Tag Explorer\"), \": This shows you the tags in your workspace, see \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tags-and-tag-explorer\",\n    \"title\": \"tags-and-tag-explorer\"\n  }, \"[[tags-and-tag-explorer]]\"), \" for more information on tags\")), mdx(\"h2\", {\n    \"id\": \"settings\"\n  }, \"Settings\"), mdx(\"p\", null, \"To view or change the settings in VsCode, press \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cmd+,\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"d7dda740-5791-5f50-8094-00d9a7c036f0","fields":{"slug":"/docs/how-to/get-started-with-vscode","title":"Getting started with VsCode"}}}]},"fields":{"slug":"/docs/features/tags-and-tag-explorer","title":"Tags and Tag Explorer"}}},"pageContext":{"id":"14938cb1-e750-5e9c-9088-304b5a336011"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}